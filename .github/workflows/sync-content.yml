name: Sync private content to public

on:
  workflow_dispatch:
    inputs:
      content_ref:
        description: "Branch or tag in the private repo to sync"
        required: false
        default: main
  schedule:
    - cron: "0 * * * *"  # hourly

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      # 1) Checkout PUBLIC repo (this repo)
      - name: Checkout PUBLIC repo (this repo)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) 清理历史遗留的 submodule 指针（可重复执行，安全）
      - name: Remove legacy submodule pointers
        run: |
          set -eux
          git rm -r --cached ops || true
          git rm -r --cached ops_src || true
          rm -rf ops ops_src || true
          if [ -f .gitmodules ]; then
            git config -f .gitmodules --remove-section submodule.ops || true
            git config -f .gitmodules --remove-section submodule.ops_src || true
            rm -f .gitmodules || true
          fi

      # 3) 从你的私库（content-ops）取内容
      - name: Checkout PRIVATE content repo
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.OPS_REPO }}     # 例如 enxpower/content-ops
          token: ${{ secrets.OPS_TOKEN }}         # 你已经配置好的 PAT
          ref: ${{ github.event.inputs.content_ref }}
          path: content_src
          fetch-depth: 1
          persist-credentials: false

      # 4) 可视化检查（方便确认私库里文件路径）
      - name: Show trees (debug)
        run: |
          echo "::group::public root"; ls -la; echo "::endgroup::"
          echo "::group::private root"; ls -la content_src; echo "::endgroup::"
          echo "::group::private static/data"; ls -la content_src/static/data || true; echo "::endgroup::"

      # 5) 仅镜像白名单目录/文件（私库 → 公库），会清理公库多余文件
      - name: Sync whitelisted paths (mirror)
        run: |
          set -eux
          mkdir -p ads downloads static/data
          rsync -av --checksum --delete \
            --include='static/data/ads.json' \
            --include='ads/***' \
            --include='downloads/***' \
            --exclude='*' \
            content_src/ ./

      # 6) 有变更才提交
      - name: Commit & push if changed
        run: |
          set -eux
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git config user.name "actions-user"
            git config user.email "actions@users.noreply.github.com"
            git commit -m "chore: sync content from private repo"
            git push
          fi
