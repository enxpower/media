name: Sync private content to public

on:
  workflow_dispatch:
    inputs:
      ops_ref:
        description: "Private repo branch/tag to sync"
        required: false
        default: "main"
  schedule:
    - cron: "0 * * * *"   # 每小时，可按需调整

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      # 1) 公库
      - name: Checkout PUBLIC repo (this repo)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) 安全清理历史遗留的 submodule 指针（有就删、没有就跳过）
      - name: Remove stray submodule pointer 'ops' (safe)
        run: |
          set -eux
          git rm -r --cached ops || true
          rm -rf ops || true
          if [ -f .gitmodules ]; then
            git config -f .gitmodules --remove-section submodule.ops || true
            # 清空后就删掉
            [ -s .gitmodules ] || rm -f .gitmodules || true
          fi

      # 3) 私库检出到 ops/（保持你现有的命名与 secrets）
      - name: Checkout PRIVATE content repo
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.OPS_REPO }}     # 例如 enxpower/content-ops
          token: ${{ secrets.OPS_TOKEN }}         # 你已配置好的 PAT
          ref: ${{ github.event.inputs.ops_ref || 'main' }}
          path: ops
          submodules: false
          persist-credentials: false
          fetch-depth: 1

      - name: Show tree (debug)
        run: |
          echo "::group::root"; ls -la; echo "::endgroup::"
          echo "::group::ops"; ls -la ops; echo "::endgroup::"

      # 4) 只同步白名单
      - name: Sync whitelisted paths (ads, downloads, static/data)
        run: |
          set -eux
          mkdir -p ads downloads static/data
          rsync -av --delete \
            --include='static/data/ads.json' \
            --include='ads/***' \
            --include='downloads/***' \
            --exclude='*' \
            ops/ ./

      # 5) 如有变更再提交
      - name: Commit & push if changed
        run: |
          set -eux
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git config user.name "actions-user"
            git config user.email "actions@users.noreply.github.com"
            git commit -m "chore: sync private content"
            git push
          fi
